/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SignupIndexRouteImport } from './routes/signup/index'
import { Route as PostsIndexRouteImport } from './routes/posts/index'
import { Route as LoginIndexRouteImport } from './routes/login/index'
import { Route as PostsPostIdIndexRouteImport } from './routes/posts/$postId/index'
import { Route as PostsPostIdEditRouteImport } from './routes/posts/$postId/edit'

const AboutLazyRouteImport = createFileRoute('/about')()

const AboutLazyRoute = AboutLazyRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const SignupIndexRoute = SignupIndexRouteImport.update({
  id: '/signup/',
  path: '/signup/',
  getParentRoute: () => rootRouteImport,
} as any)
const PostsIndexRoute = PostsIndexRouteImport.update({
  id: '/posts/',
  path: '/posts/',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginIndexRoute = LoginIndexRouteImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRouteImport,
} as any)
const PostsPostIdIndexRoute = PostsPostIdIndexRouteImport.update({
  id: '/posts/$postId/',
  path: '/posts/$postId/',
  getParentRoute: () => rootRouteImport,
} as any)
const PostsPostIdEditRoute = PostsPostIdEditRouteImport.update({
  id: '/posts/$postId/edit',
  path: '/posts/$postId/edit',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutLazyRoute
  '/login': typeof LoginIndexRoute
  '/posts': typeof PostsIndexRoute
  '/signup': typeof SignupIndexRoute
  '/posts/$postId/edit': typeof PostsPostIdEditRoute
  '/posts/$postId': typeof PostsPostIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutLazyRoute
  '/login': typeof LoginIndexRoute
  '/posts': typeof PostsIndexRoute
  '/signup': typeof SignupIndexRoute
  '/posts/$postId/edit': typeof PostsPostIdEditRoute
  '/posts/$postId': typeof PostsPostIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutLazyRoute
  '/login/': typeof LoginIndexRoute
  '/posts/': typeof PostsIndexRoute
  '/signup/': typeof SignupIndexRoute
  '/posts/$postId/edit': typeof PostsPostIdEditRoute
  '/posts/$postId/': typeof PostsPostIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/login'
    | '/posts'
    | '/signup'
    | '/posts/$postId/edit'
    | '/posts/$postId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/login'
    | '/posts'
    | '/signup'
    | '/posts/$postId/edit'
    | '/posts/$postId'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/login/'
    | '/posts/'
    | '/signup/'
    | '/posts/$postId/edit'
    | '/posts/$postId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutLazyRoute: typeof AboutLazyRoute
  LoginIndexRoute: typeof LoginIndexRoute
  PostsIndexRoute: typeof PostsIndexRoute
  SignupIndexRoute: typeof SignupIndexRoute
  PostsPostIdEditRoute: typeof PostsPostIdEditRoute
  PostsPostIdIndexRoute: typeof PostsPostIdIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signup/': {
      id: '/signup/'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/posts/': {
      id: '/posts/'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof PostsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/posts/$postId/': {
      id: '/posts/$postId/'
      path: '/posts/$postId'
      fullPath: '/posts/$postId'
      preLoaderRoute: typeof PostsPostIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/posts/$postId/edit': {
      id: '/posts/$postId/edit'
      path: '/posts/$postId/edit'
      fullPath: '/posts/$postId/edit'
      preLoaderRoute: typeof PostsPostIdEditRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutLazyRoute: AboutLazyRoute,
  LoginIndexRoute: LoginIndexRoute,
  PostsIndexRoute: PostsIndexRoute,
  SignupIndexRoute: SignupIndexRoute,
  PostsPostIdEditRoute: PostsPostIdEditRoute,
  PostsPostIdIndexRoute: PostsPostIdIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
